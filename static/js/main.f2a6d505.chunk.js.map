{"version":3,"sources":["Components/Header.js","Components/Sidebar.js","Pages/Index.js","Pages/Login.js","Pages/Register.js","AppRouter.js","serviceWorker.js","global/httpSercer.js","index.js"],"names":["Hade","props","state","topbar","url","name","user","className","to","this","map","item","index","key","Component","Sidebar","num","list","Index","Login","type","placeholder","value","href","Register","AppRouter","path","exact","component","Boolean","window","location","hostname","match","axios","defaults","baseURL","interceptors","request","use","config","err","console","log","Promise","reject","response","data","status","prototype","get","method","postRequestBody","params","headers","charset","postRequestParam","transformRequest","ret","it","encodeURIComponent","multiple","requsetArray","callback","all","then","spread","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2a6d505.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport '../style/Header.css';\n\nexport default class Hade extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            topbar: [\n                { url: '/', name: '首页' },\n                { url: 'technology', name: '技术笔记' },\n                { url: 'download', name: '资源下载' },\n                { url: 'life', name: '生活笔记' },\n                { url: 'about', name: '关于我' },\n                { url: 'message', name: '给我留言' },\n            ],\n            user: {\n                name: 'chasing',\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"header\">\n                <div className=\"site-header clearfix\">\n                    <div className=\"f-l\"><Link to=\"/logo\" className=\"logo\">chasingDream</Link></div>\n                    <ul className=\"f-r\">\n                        {this.state.topbar.map((item, index) => {\n                            return <li key={index}><Link to={item.url}>{item.name}</Link></li>\n                        })}\n                    </ul>\n                    {/* <ul className=\"f-r\">\n                        <li><Link to=\"/login\" className=\"login\">登录</Link></li>\n                        <li><Link to=\"/register\" className=\"register\">注册</Link></li>\n                    </ul> */}\n                    {/* <form className=\"search-form f-r\"><input type=\"text\" className=\"search\"/><input type=\"submit\" className=\"search-btn\"/></form> */}\n                </div>\n            </div>\n        )\n        \n    }\n}","import React, { Component } from 'react'\nimport '../style/Sidebar.css'\n\nexport default class Sidebar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            num: 89,\n            list: [\"1.作者简介\", \"2. 前言\", \"3. 梦想\", \"4. 现实\"]\n        }\n    }\n    render() {\n        return (\n            <div className=\"sidebar\">\n                <div>\n                    <h3 className=\"title\">目录</h3>\n                    <div className=\"tip\">\n                        <span>你已经读了</span>\n                        <span>{this.state.num}</span>\n                        <span>%</span>\n                        <div className=\"tip_line\"></div>\n                    </div>\n                    <ul className=\"sidebar_list\">\n                        {this.state.list.map((item, index) => {\n                            return <li className=\"list_item\" key={index}>{item}</li>\n                        })}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Header from '../Components/Header'\nimport Sidebar from '../Components/Sidebar'\nimport '../style/Index.css';\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { }\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <Sidebar />\n                </div>\n                <div className=\"body_wrap\">\n                    <Header />\n                    <div></div>\n                </div>\n                \n                \n                {/* <Swiper /> */}\n                {/* <List /> */}\n                {/* <Footer /> */}\n            </div>\n        );\n    }\n}\n\nexport default Index;\n\n","import React, { Component } from 'react'\nimport '../style/login.css'\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"personal-container\">\n                    <div className=\"personal-page\">\n                        <div className=\"page-wrap\">\n                            <div className=\"page-top\">\n                                <span className=\"f-l point\">·</span>\n                            </div>\n                            <div className=\"page-content\">\n                                <form className=\"login-form\">\n                                    <div>\n                                        <div className=\"username-box userdiv\">\n                                            <i className=\"iconfont\">1</i> \n                                            <input type=\"text\" name=\"username\" className=\"username userinput\" placeholder=\"手机号或邮箱\" />\n                                        </div>\n                                        <div className=\"password-box userdiv\">\n                                            <i className=\"iconfont\">2</i>\n                                            <input type=\"password\" name=\"password\" className=\"password userinput\" placeholder=\"密码\" />\n                                        </div>                                      \n                                    </div>\n                                    <div className=\"login-other clearfix\">\n                                        <input type=\"checkbox\" name=\"remberme\" className=\"remberme\" />\n                                        <span>记住我</span>\n                                    </div>                                   \n                                    <input className=\"submit\" type=\"submit\" value=\"登录\" />\n                                    <div className=\"social-account-login\">\n                                        <h6>社交账号登录</h6>\n                                    </div>\n                                    <ul className=\"login-methods\">\n                                        <li className=\"login-methods-one\">\n                                            <a href=\"3\"><i className=\"iconfont\">微</i></a>\n                                        </li>\n                                        <li>\n                                            <a href=\"3\"><i className=\"iconfont\">博</i></a>\n                                        </li>\n                                        <li>\n                                            <a href=\"3\"><i className=\"iconfont\">Q</i></a>\n                                        </li>\n                                        <li>\n                                            <a href=\"3\">其他</a>\n                                        </li>\n                                    </ul>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Register extends Component {\n    constructor(props){\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return(\n            <div>我是注册页面</div>\n        )\n    }\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Index from './Pages/Index'\nimport Login from './Pages/Login'\nimport Register from './Pages/Register'\n\nfunction AppRouter() {\n  return (\n    <Router>\n        <Route path=\"/\" exact component={Index} />\n        <Route path=\"/login\" exact component={Login} />\n        <Route path=\"/register\" exact component={Register} />\n    </Router>\n  );\n}\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\";\nimport { Component } from \"react\";\n\naxios.defaults.baseURL = 'http://192.144.231.15:8000/';\n\n// 请求前拦截\naxios.interceptors.request.use(\n    config => {\n        return config;\n    },\n    err => {\n        console.log(\"请求超时\");\n        return Promise.reject(err);\n    }\n);\n// 返回后拦截\naxios.interceptors.response.use(\n    data => {\n        return data;\n    },\n    err => {\n        if(err.response){\n            if (err.response.status === 504 || err.response.status === 404) {\n                console.log(\"服务器被吃了⊙﹏⊙∥\");\n            } else if (err.response.status === 401) {\n                console.log(\"登录信息失效⊙﹏⊙∥\");\n            } else if (err.response.status === 500) {\n                console.log(\"服务器开小差了⊙﹏⊙∥\");\n            }\n        }\n        return Promise.reject(err);\n    }\n);\n\n// @RequestBody请求\nconst postRequestBody = (url, params) => {\n    return axios({\n        method: \"post\",\n        url: `${url}`,\n        data: params,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            charset: \"utf-8\"\n        }\n    });\n};\n\n// @RequsetParam请求\nconst postRequestParam = (url, params) => {\n    return axios({\n        method: \"post\",\n        url: `${url}`,\n        data: params,\n        transformRequest: [\n            function (data) {\n                let ret = \"\";\n                for (let it in data) {\n                    ret +=\n                        encodeURIComponent(it) + \"=\" + encodeURIComponent(data[it]) + \"&\";\n                }\n                return ret;\n            }\n        ],\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n    });\n};\n\nconst get = url => {\n    return axios({\n        method: \"get\",\n        url: `${url}`\n    });\n};\n\nconst multiple = function (requsetArray, callback) {\n    axios.all(requsetArray).then(axios.spread(callback));\n};\n\nComponent.prototype.get = get;\nComponent.prototype.postRequestBody = postRequestBody;\nComponent.prototype.postRequestParam = postRequestParam;\nComponent.prototype.multiple = multiple;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './AppRouter'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport \"./global/httpSercer\";\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}